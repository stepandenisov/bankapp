services:
  #Config Server
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
      args:
        RUN_TESTS: "false"
    ports:
      - "8888:8888"
    depends_on:
      - eureka
      - keycloak
    networks:
      - mynet

  #Eureka
  eureka:
    build:
      context: .
      dockerfile: eureka/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - mynet

  #Gateway
  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - config-server
    networks:
      - mynet

  #Account
  account:
    build:
      context: .
      dockerfile: account/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/yandex
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    ports:
      - "8082:8082"
    depends_on:
      - config-server
    networks:
      - mynet

  #Blocker
  blocker:
    build:
      context: .
      dockerfile: blocker/Dockerfile
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    ports:
      - "8087:8087"
    depends_on:
      - account
      - config-server
    networks:
      - mynet

  #Cash
  cash:
    build:
      context: .
      dockerfile: cash/Dockerfile
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
    ports:
      - "8081:8081"
    depends_on:
      - config-server
    networks:
      - mynet

  #Exchange
  exchange:
    build:
      context: .
      dockerfile: exchange/Dockerfile
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    ports:
      - "8085:8085"
    depends_on:
      - config-server
    networks:
      - mynet

  #Exchange Generator
  exchange-generator:
    build:
      context: .
      dockerfile: exchange-generator/Dockerfile
    ports:
      - "8084:8084"
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
    depends_on:
      - config-server
    networks:
      - mynet

  #Transfer
  transfer:
    build:
      context: .
      dockerfile: transfer/Dockerfile
    ports:
      - "8086:8086"
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    depends_on:
      - exchange-generator
      - config-server
    networks:
      - mynet

  #Front
  front:
    build:
      context: .
      dockerfile: front/Dockerfile
    ports:
      - "8088:8088"
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    depends_on:
      - config-server
    networks:
      - mynet

  #Notifications
  notification:
    build:
      context: .
      dockerfile: notifications/Dockerfile
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      EUREKA_URI: http://eureka:8761/eureka/
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/master/protocol/openid-connect/token
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
    ports:
      - "8083:8083"
    depends_on:
      - config-server
    networks:
      - mynet

  #Postgres
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: yandex
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    ports:
      - "5432:5432"
    networks:
      - mynet

  #Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    command: [ "start-dev", "--import-realm" ]
    ports:
      - "8089:8080"
    environment:
      TZ: Europe/Samara
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - mynet

networks:
  mynet:
    driver: bridge

